@page "/login"
@layout EmptyLayout
@inject IAuthService authService
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider authenticationStateProvider
@inject IToastService ToastService

    <body class="vh-100">
        <div class="authincation h-100">
            <div class="container h-100">
                <div class="row justify-content-center h-100 align-items-center">
                    <div class="col-md-6">
                        <div class="authincation-content">
                            <div class="row no-gutters">
                                <div class="col-xl-12">
                                    <div class="auth-form">
                                        <div class="text-center mb-3">
                                            <a href="/"><img src="images/logo-full.png" alt=""></a>
                                        </div>
                                        <h4 class="text-center mb-4">Đăng nhập vào Admin</h4>
                                        <EditForm Model="loginModel" OnValidSubmit="HandleLogin" >
                                            <DataAnnotationsValidator/>
                                            <div class="mb-3">
                                                <label class="mb-1"><strong>UserName</strong></label>
                                                <InputText class="form-control" type="text" placeholder="Tài khoản"
                                                           @bind-Value="@loginModel.UserName"></InputText>
                                                <ValidationMessage For="()=>loginModel.UserName"></ValidationMessage>
                                            </div>
                                            <div class="mb-3">
                                                <InputText class="form-control" type="password" placeholder="Mật khẩu"
                                                           @bind-Value="@loginModel.Password"></InputText>
                                                <ValidationMessage For="()=>loginModel.Password"></ValidationMessage>
                                            </div>
                                            <div class="row d-flex justify-content-between mt-4 mb-2">
                                                <div class="mb-3">
                                                    <div class="form-check custom-checkbox ms-1">
                                                        <InputCheckbox class="form-check-input" @bind-Value="@loginModel.RememberMe"></InputCheckbox>
                                                        <label class="form-check-label" for="basic_checkbox_1">Ghi nhớ</label>
                                                    </div>
                                                </div>
                                                <div class="mb-3">
                                                    <a href="/page-forgot-password">Forgot Password?</a>
                                                </div>
                                            </div>
                                            <div class="text-center">
                                                <button type="submit" class="btn btn-primary btn-block">Đăng nhập</button>
                                            </div>
                                        </EditForm>
                                        <div class="new-account mt-3">
                                            <p>Don't have an account? <a class="text-primary" href="register">Đăng kí</a></p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </body>
@inject IJSRuntime JS 

@code {
    private LoginRequest loginModel = new LoginRequest();

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            navigationManager.NavigateTo("/product", true);
        }
    }
    private async Task HandleLogin()
    {
        var result = await authService.Login(loginModel);
        if (result)
        {
            ToastService.ShowSuccess("Đăng nhập thành công", "Chúc mừng");
            navigationManager.NavigateTo("/product", true);
        }
        else
        {
            ToastService.ShowError("Đăng nhập thất bại", "Error");
        }
    }
}
