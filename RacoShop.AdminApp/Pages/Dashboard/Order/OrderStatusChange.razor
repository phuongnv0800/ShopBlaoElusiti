
<div class="simple-form" style="width: 180px">
    <select class="form-control mb-4" @bind="request.Status">
        @foreach (var item in (OrderStatus[])Enum.GetValues(typeof(OrderStatus)))
        {
            <option value="@item">@item</option>
        }
    </select>
    <button @onclick="UpdateStatus" class="btn btn-primary">Cập nhật</button>

    <button @onclick="ModalInstance.CancelAsync" class="btn btn-secondary">Huỷ bỏ</button>

</div>
@inject IOrderApiClient OrderApiClient
@inject IToastService ToastService
@code {
    [Parameter]
    public int Id { get; set; }
    [CascadingParameter]
    BlazoredModalInstance ModalInstance { get; set; }
    private OrderRequest request;

    protected override void OnInitialized()
    {
        request = new OrderRequest();
        SetOrder();
        base.OnInitialized();
    }
    private async void SetOrder()
    {
        var order = await OrderApiClient.GetById(Id);
        request.Id = order.Id;
        request.ShipAddress = order.ShipAddress;
        request.ShipName = order.ShipName;
        request.ShipPhone = order.ShipPhone;
        request.Status = order.Status;
        StateHasChanged();
    }
    private async void UpdateStatus()
    {
        var result = await OrderApiClient.Update(request);
        if (result)
        {
            ToastService.ShowSuccess($"Cập nhật sản phẩm", $"Thành công");
        }
        else
        {
            ToastService.ShowError("Cập nhật không thành công", "Thất bại");
        }
        await ModalInstance.CloseAsync(ModalResult.Ok<string>("thành công"));
    }
}
