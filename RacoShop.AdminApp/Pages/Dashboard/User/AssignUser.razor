@inject IUserApiClient UserApiClient
@inject IRoleApiClient RoleApiClient
@inject IToastService ToastService
<div class="simple-form" style="width: 180px">
    <div class="form-group">
        <div class="checkbox-list">
            @if (roles != null)
            {
                @foreach (var item in request.Roles)
                {
                    <label class="checkbox checkbox-success">
                        <input type="checkbox" @bind="item.Selected" />
                        <span></span>
                        @item.Name
                    </label>
                }
            }
        </div>
    </div>

    <button @onclick="AssignRoleUser" class="btn btn-primary">Cập nhật</button>

    <button @onclick="ModalInstance.CancelAsync" class="btn btn-secondary">Huỷ bỏ</button>

</div>
@code {
    [Parameter]
    public Guid Id { get; set; }

    [CascadingParameter]
    BlazoredModalInstance ModalInstance { get; set; }

    private List<RoleVm> roles;

    private UserVm user;
    private RoleAssignRequest request;
    protected override async Task OnInitializedAsync()
    {
        request = new RoleAssignRequest();
        roles = await RoleApiClient.GetAll();
        user = await UserApiClient.GetById(Id);
        request.Id = Id;
        foreach (var role in roles)
        {
            request.Roles.Add(new SelectedItem()
            {
                Id = role.Id.ToString(),
                Name = role.Name,
                Selected = user.Roles.Contains(role.Name)
            });
        }
    }

    private async void AssignRoleUser()
    {
        var result = await UserApiClient.Assign(Id, request);
        if (result)
        {
            ToastService.ShowSuccess($"Cập nhật sản phẩm", $"Thành công");
        }
        else
        {
            ToastService.ShowError("Cập nhật không thành công", "Thất bại");
        }
        await ModalInstance.CloseAsync(ModalResult.Ok<string>("thành công"));
    }
}
