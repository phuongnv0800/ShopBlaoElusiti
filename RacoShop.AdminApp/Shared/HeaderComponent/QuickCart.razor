<AuthorizeView>
    <div id="kt_quick_cart" class="offcanvas offcanvas-right p-10">
        <!--begin::Header-->
        <div class="offcanvas-header d-flex align-items-center justify-content-between pb-7">
            <h4 class="font-weight-bold m-0">Shopping Cart</h4>
            <a href="#" class="btn btn-xs btn-icon btn-light btn-hover-primary" id="kt_quick_cart_close">
                <i class="ki ki-close icon-xs text-muted"></i>
            </a>
        </div>
        <!--end::Header-->
        <!--begin::Content-->
        <div class="offcanvas-content">
            <!--begin::Wrapper-->
            <div class="offcanvas-wrapper mb-5 scroll-pull">
                @if (Carts != null)
                {
                    decimal total = 0;
                    int qty = 0;
                    foreach (var item in Carts)
                    {
                        <UpdateQuantityQuickCart Cart="item" Callback="UpdateSuccess" />
                        <!--begin::Separator-->
                        <div class="separator separator-solid"></div>
                        total += item.SubTotal;
                        qty += item.Quantity;
                    }
                    <!--begin::Purchase-->
                    <div class="offcanvas-footer">
                        <div class="d-flex align-items-center justify-content-between mb-4">
                            <span class="font-weight-bold text-muted font-size-sm mr-2">Tổng sản phẩm</span>
                            <span class="font-weight-bolder text-dark-50 text-right">@qty</span>
                        </div>
                        <div class="d-flex align-items-center justify-content-between mb-7">
                            <span class="font-weight-bold text-muted font-size-sm mr-2">Tổng tiền</span>
                            <span class="font-weight-bolder text-primary text-right">@total.ToString("c")</span>
                        </div>
                        <div class="text-right">
                            <a href="checkout" class="btn btn-primary text-weight-bold">Đặt hàng</a>
                        </div>
                    </div>
                    <!--end::Purchase-->
                }
                else
                {
                    <LoadingIndicator></LoadingIndicator>
                }
            </div>
            <!--end::Wrapper-->
        </div>
        <!--end::Content-->
    </div>
</AuthorizeView>
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IJSRuntime JS
@inject ICartApiClient CartApiClient
@attribute [Authorize]
@code{

    public IEnumerable<CartVm> Carts { get; set; }
    private AuthenticationState authState;
    private string userName;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("KTLayoutQuickCartPanel.init", "kt_quick_cart");
        }
        await GetCarts();
    }
    //protected override async Task OnParametersSetAsync()
    //{
    //    authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
    //    userName = authState.User.Identity.Name.ToString();
    //}
    protected override async Task OnInitializedAsync()
    {
        authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        if (!string.IsNullOrEmpty(authState.User.Identity.Name))
        {
            userName = authState.User.Identity.Name.ToString();
            await GetCarts();
        }

    }
    private async void UpdateSuccess()
    {
        await GetCarts();
    }
    private async Task GetCarts()
    {
        if (!string.IsNullOrWhiteSpace(userName))
        {

            Carts = await CartApiClient.GetByUserName(userName);
            StateHasChanged();
        }
    }
}