<AuthorizeView>
    <a href="javascript:void(0)" class="main-btn">
        <i class="lni lni-cart"></i>
        <span class="total-items">@(Carts != null ? Carts.Count() : "0")</span>
    </a>
    <div class="shopping-item">
        @if (Carts != null)
        {
            <div class="dropdown-cart-header">
                <span>Sản phẩm</span>
                <a href="cart">Giỏ hàng</a>
            </div>

            decimal total = 0;
            <ul class="shopping-list pe-1" style="height:300px;overflow-y: scroll; overflow-x: hidden">
                @foreach (var item in Carts)
                {
                    <CartUpdate Callback="CallBackUpdate" Cart="item" />
                    total += item.SubTotal;
                }
            </ul>
            <div class="bottom">
                <div class="total">
                    <span>Thành tiền:</span>
                    <span class="total-amount">@total.ToString("c")</span>
                </div>
                <div class="total">
                    <span class="text-secondary">Số lượng:</span>
                    <span class="total-amount text-secondary">@Carts.Count()</span>
                </div>
                <div class="button">
                    <a href="checkout" class="btn animate">Đặt hàng</a>
                </div>
            </div>
        }
    </div>
</AuthorizeView>
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IJSRuntime JS
@inject ICartApiClient CartApiClient
@attribute [Authorize]
@code{

    public IEnumerable<CartVm> Carts { get; set; }
    private AuthenticationState authState;
    private string userName;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await GetCarts();
    }
    protected override async Task OnInitializedAsync()
    {
        authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        if (!string.IsNullOrEmpty(authState.User.Identity.Name))
        {
            userName = authState.User.Identity.Name.ToString();
            await GetCarts();
        }
    }
    private async void CallBackUpdate()
    {
        await GetCarts();
    }

    private async Task GetCarts()
    {
        if (!string.IsNullOrWhiteSpace(userName))
        {
            Carts = await CartApiClient.GetByUserName(userName);
            StateHasChanged();
        }
    }
}